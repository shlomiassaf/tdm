(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{162:function(s,a){s.exports=[{file:"README.md",lang:"md",section:"part1",code:'<h1><a id="virtual-groups" class="anchor" href="#virtual-groups"><span class="header-link"></span></a>Virtual Groups</h1><p>Virtual groups allows splitting the same form instance over multiple\ndynamic forms.</p>\n<p>Each dynamic form is therefor a virtual group.</p>\n<h2><a id="master-slave" class="anchor" href="#master-slave"><span class="header-link"></span></a>Master / Slave</h2><p>To create a virtual group a master/slave relationship between the\ndynamic forms is required.</p>\n<p>One dynamic form, usually the top-most, is the master and all other\ndynamic forms in the group are set as slaves.</p>\n<p>In the following example, we have 2 independent forms, both are <code>master</code>\nforms </p>\n<pre class="lang-html"><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n</code></pre>\n<p>Converting them to a master/slave array:</p>\n<pre class="lang-html"><code class="lang-html"><span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> #<span class="hljs-attr">master</span> [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">slaveOf</span>]=<span class="hljs-string">"master"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n</code></pre>\n<h2><a id="-code-slaveof-code-" class="anchor" href="#-code-slaveof-code-"><span class="header-link"></span></a><code>[slaveOf]</code></h2><ul>\n<li>Setting a <code>[model]</code> is not allowed on a slave dynamic form </li>\n<li>Slave&#39;s does not emit events and have most of their features turned\noff, you can access them in the master.</li>\n<li>Slave form support <code>filter</code> and <code>override</code></li>\n<li>Salve&#39;s are just for the UI, all interaction should be done with the\nmaster.</li>\n</ul>\n<div class="info">\n  <code>filter</code> and <code>override</code> will be covered in future chapters \n</div> \n\n<div class="alert">\n  When working with a master/slave setup make sure not to display the\n  same form control in more then one dynamic form.\n\n  Sync is not guaranteed and you might experience unexpected results.\n\n  Use <code>filter</code>. \n</div>\n\n<p>In the following example the form is split to 2 groups:</p>\n'},{file:"README.md",lang:"md",section:"part2",code:"<p>In the following example an inner split was added within the <strong>Other</strong>\nsection, using a tab component.</p>\n"},{file:"virtual-groups.component.ts",lang:"ts",section:"default",code:'<span class="hljs-keyword">import</span> { Component } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { Hero } <span class="hljs-keyword">from</span> <span class="hljs-string">\'../4-element-metadata\'</span>;\n\n<span class="hljs-meta">@Component</span>({\n  selector: <span class="hljs-string">\'form-virtual-groups\'</span>,\n  templateUrl: <span class="hljs-string">\'./virtual-groups.component.html\'</span>,\n  styleUrls: [ <span class="hljs-string">\'./virtual-groups.component.scss\'</span> ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> VirtualGroupsComponent {\n\n  model = <span class="hljs-keyword">new</span> Hero();\n}\n',title:"Component"},{file:"virtual-groups.component.html",lang:"html",section:"simple",code:'    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Section: User Name<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> #<span class="hljs-attr">dynFormMaster</span>\n                  [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span>\n                  <span class="hljs-attr">filterMode</span>=<span class="hljs-string">"include"</span>\n                  [<span class="hljs-attr">filter</span>]=<span class="hljs-string">"[\'id\', \'name\']"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Section: Other<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">slaveOf</span>]=<span class="hljs-string">"dynFormMaster"</span>\n                  [<span class="hljs-attr">filter</span>]=<span class="hljs-string">"[\'id\', \'name\']"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>',title:"Template"},{file:"virtual-groups.component.html",lang:"html",section:"3way",code:'    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Section: User Name<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> #<span class="hljs-attr">dynFormMaster3Way</span>\n                  [<span class="hljs-attr">model</span>]=<span class="hljs-string">"model"</span>\n                  <span class="hljs-attr">filterMode</span>=<span class="hljs-string">"include"</span>\n                  [<span class="hljs-attr">filter</span>]=<span class="hljs-string">"[\'id\', \'name\']"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Section: Other<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-tab-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-tab</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"BOOLEAN"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">slaveOf</span>]=<span class="hljs-string">"dynFormMaster3Way"</span>\n                      [<span class="hljs-attr">filter</span>]=<span class="hljs-string">"[\'id\', \'name\', \'bmi\', \'superPower\']"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">mat-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-tab</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"OTHER"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">dynamic-form</span> [<span class="hljs-attr">slaveOf</span>]=<span class="hljs-string">"dynFormMaster3Way"</span>\n                      [<span class="hljs-attr">filter</span>]=<span class="hljs-string">"[\'id\', \'name\', \'hasTracking\', \'doubleAgent\']"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dynamic-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">mat-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-tab-group</span>&gt;</span>',title:"Template"},{file:"model.ts",lang:"ts",section:"default",code:'<span class="hljs-keyword">import</span> { Model, Prop } <span class="hljs-keyword">from</span> <span class="hljs-string">\'@tdm/ngx-dynamic-forms\'</span>;\n\n<span class="hljs-meta">@Model</span>({\n  form: <span class="hljs-literal">true</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> Hero {\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'number\'</span>,\n        label: <span class="hljs-string">\'Hero ID\'</span>\n      }\n    }\n  })\n  id: <span class="hljs-built_in">number</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      required: <span class="hljs-literal">true</span>,\n      render: {\n        vType: <span class="hljs-string">\'text\'</span>,\n        label: <span class="hljs-string">\'Hero Name\'</span>\n      }\n    }\n  })\n  name: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'date\'</span>,\n        label: <span class="hljs-string">\'Hero Birth\'</span>\n      }\n    }\n  })\n  birth: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'boolean\'</span>,\n        label: <span class="hljs-string">\'Has Tracking Device\'</span>\n      }\n    }\n  })\n  hasTracking: <span class="hljs-built_in">boolean</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'slideToggle\'</span>,\n        label: <span class="hljs-string">\'Double Agent\'</span>\n      }\n    }\n  })\n  doubleAgent: <span class="hljs-built_in">boolean</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'slider\'</span>,\n        label: <span class="hljs-string">\'BMI Index\'</span>,\n        data: { min: <span class="hljs-number">1</span>, max: <span class="hljs-number">35</span> }\n      }\n    }\n  })\n  bmi: <span class="hljs-built_in">number</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      render: {\n        vType: <span class="hljs-string">\'select\'</span>,\n        label: <span class="hljs-string">\'Super Power\'</span>,\n        data: {\n          multiple: <span class="hljs-literal">true</span>,\n          options: [\n            { value: <span class="hljs-string">\'selfHealing\'</span>, label: <span class="hljs-string">\'Self Healing\'</span> },\n            { value: <span class="hljs-string">\'flying\'</span>, label: <span class="hljs-string">\'Flying\'</span> },\n            { value: <span class="hljs-string">\'cloaking\'</span>, label: <span class="hljs-string">\'Cloaking\'</span> },\n            { value: <span class="hljs-string">\'cloning\'</span>, label: <span class="hljs-string">\'Cloning\'</span> },\n            { value: <span class="hljs-string">\'invisibility\'</span>, label: <span class="hljs-string">\'Invisibility\'</span> }\n          ]\n        }\n      }\n    }\n  })\n  superPower: <span class="hljs-string">\'selfHealing\'</span> | <span class="hljs-string">\'flying\'</span> | <span class="hljs-string">\'cloaking\'</span> | <span class="hljs-string">\'cloning\'</span> | <span class="hljs-string">\'invisibility\'</span>;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      forceObjectType: <span class="hljs-literal">true</span>,\n      render: {\n        vType: <span class="hljs-string">\'select\'</span>,\n        label: <span class="hljs-string">\'Hobbies\'</span>,\n        data: {\n          multiple: <span class="hljs-literal">true</span>,\n          options: [\n            <span class="hljs-string">\'Baseball\'</span>,\n            <span class="hljs-string">\'Basketball\'</span>,\n            <span class="hljs-string">\'Buildi\'</span>,\n            <span class="hljs-string">\'Cosplay\'</span>,\n            <span class="hljs-string">\'Soccer\'</span>,\n            <span class="hljs-string">\'Spelunkering\'</span>,\n            <span class="hljs-string">\'Storm Chasing\'</span>,\n            <span class="hljs-string">\'Wrestling\'</span>,\n            <span class="hljs-string">\'Writing\'</span>,\n            <span class="hljs-string">\'Yoga\'</span>\n          ].map( <span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> ({value})),\n        }\n      }\n    }\n  })\n  hobbies: <span class="hljs-built_in">Array</span>&lt;<span class="hljs-string">\'selfHealing\'</span> | <span class="hljs-string">\'flying\'</span> | <span class="hljs-string">\'cloaking\'</span> | <span class="hljs-string">\'cloning\'</span> | <span class="hljs-string">\'invisibility\'</span>&gt;;\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      forceObjectType: <span class="hljs-literal">true</span>,\n      render: {\n        vType: <span class="hljs-string">\'chips\'</span>,\n        label: <span class="hljs-string">\'Chips\'</span>,\n        data: {\n          removable: <span class="hljs-literal">true</span>,\n          addOnBlur: <span class="hljs-literal">true</span>,\n        }\n      }\n    }\n  })\n  chips: <span class="hljs-built_in">string</span>[];\n\n  <span class="hljs-meta">@Prop</span>({\n    form: {\n      required: <span class="hljs-literal">true</span>,\n      render: {\n        vType: <span class="hljs-string">\'textarea\'</span>,\n        label: <span class="hljs-string">\'Bio\'</span>,\n        data: {\n          autoSize: <span class="hljs-literal">false</span>,\n          minRows: <span class="hljs-number">3</span>,\n          maxRows: <span class="hljs-number">5</span>\n        }\n      }\n    }\n  })\n  bio: <span class="hljs-built_in">string</span>;\n}\n',title:"Model"}]}}]);